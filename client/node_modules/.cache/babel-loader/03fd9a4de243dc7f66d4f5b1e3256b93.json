{"ast":null,"code":"import _slicedToArray from \"/Users/leseanjohnson/Documents/jobs-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/leseanjohnson/Documents/jobs-board/client/src/components/Jobs.js\";\nimport React from 'react';\nimport Job from './Job';\nimport { Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport JobModal from '../components/JobModal';\nexport default function Jobs({\n  jobs\n}) {\n  const theme = useTheme(); //pagination\n\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs / 50);\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const jobsOnPage = jobs.slice(activeStep * 50, activeStep * 50 + 50);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  } //Modal\n\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const _React$useState5 = React.useState({}),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selectedJob = _React$useState6[0],\n        selectJob = _React$useState6[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n    console.log(open);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  } //TODO add search for terma that go to algo. seperated by commas?\n\n\n  return React.createElement(\"div\", {\n    className: \"jobs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(JobModal, {\n    open: open,\n    handleClose: handleClose,\n    job: selectedJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Entry level software jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Found \", numJobs, \" Jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Showing \", activeStep * 50, \" - \", activeStep * 50 + 50), jobsOnPage.map((job, i) => React.createElement(Job, {\n    job: job,\n    onClick: () => {\n      handleClickOpen();\n      selectJob(job);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Page \", activeStep + 1, \" of \", numPages), React.createElement(MobileStepper, {\n    variant: \"dots\",\n    steps: numPages,\n    position: \"static\",\n    activeStep: activeStep //add scrollTop when changing pages\n    ,\n    nextButton: React.createElement(Button, {\n      size: \"small\",\n      onClick: handleNext,\n      disabled: activeStep === numPages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Next\", theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : React.createElement(KeyboardArrowRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })),\n    backButton: React.createElement(Button, {\n      size: \"small\",\n      onClick: handleBack,\n      disabled: activeStep === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : React.createElement(KeyboardArrowLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Back\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n} //props to stepper - steps={numPages}, activeStep={activeStep}, onClick={handleNext}, onClick={handleBack}","map":{"version":3,"sources":["/Users/leseanjohnson/Documents/jobs-board/client/src/components/Jobs.js"],"names":["React","Job","Typography","useTheme","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","JobModal","Jobs","jobs","theme","numJobs","length","numPages","Math","ceil","useState","activeStep","setActiveStep","jobsOnPage","slice","handleNext","prevActiveStep","handleBack","open","setOpen","selectedJob","selectJob","handleClickOpen","console","log","handleClose","map","job","i","direction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Job from './Job'\nimport { Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport JobModal from '../components/JobModal';\n\nexport default function Jobs({jobs}) {\n  const theme = useTheme();\n  \n  //pagination\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs/50);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const jobsOnPage = jobs.slice( activeStep * 50, (activeStep * 50) + 50 );\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  //Modal\n  const [open, setOpen] = React.useState(false);\n  const [selectedJob, selectJob] = React.useState({});\n\n  function handleClickOpen() {\n    setOpen(true);\n    console.log(open);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n//TODO add search for terma that go to algo. seperated by commas?\n  return (\n    <div className='jobs'>\n      <JobModal open={open} handleClose={handleClose} job={selectedJob} />\n      <Typography variant=\"h4\" component=\"h1\">\n        Entry level software jobs\n      </Typography>\n      <Typography variant=\"h6\">\n        Found {numJobs} Jobs\n        {/* that fit {searchCriteria} */}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h1\">\n        Showing {activeStep * 50} - {(activeStep * 50) + 50}\n      </Typography>\n      {\n        jobsOnPage.map(\n          ( job,i ) => <Job job={job} onClick={() => {\n                          handleClickOpen()\n                          selectJob(job)\n                          }}\n                        />\n        )\n      }\n      <div>\n        Page { activeStep + 1 } of { numPages }\n      </div>\n      <MobileStepper\n        variant=\"dots\"\n        steps={numPages}\n        position=\"static\"\n        activeStep={activeStep}\n        //add scrollTop when changing pages\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === numPages}>\n            Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Back\n          </Button>\n        }\n      />\n    </div>\n  );\n}\n\n//props to stepper - steps={numPages}, activeStep={activeStep}, onClick={handleNext}, onClick={handleBack}"]},"metadata":{},"sourceType":"module"}