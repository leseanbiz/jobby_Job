{"ast":null,"code":"import _objectSpread from \"/Users/leseanjohnson/Documents/jobs-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/leseanjohnson/Documents/jobs-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/leseanjohnson/Documents/jobs-board/client/src/components/Jobs.js\";\nimport React from 'react';\nimport Job from './Job';\nimport { Typography } from '@material-ui/core';\nimport JobModal from '../components/JobModal';\nimport Stepper from '../components/Stepper';\nimport Switch from '../components/Switch';\nexport default function Jobs({\n  jobs\n}) {\n  //switches\n  const _React$useState = React.useState({\n    partTime: false,\n    fullTime: false,\n    contract: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        switchState = _React$useState2[0],\n        setSwitchState = _React$useState2[1];\n\n  const switchArr = [\"partTime\", \"fullTime\", \"contract\"];\n\n  const handleChange = name => event => {\n    filterJobsbyType(jobs, name); // console.log(name)\n    // console.log(name, event.target.checked)\n\n    setSwitchState(_objectSpread({}, switchState, {\n      [name]: event.target.checked\n    }));\n  };\n\n  function filterJobsbyType(jobs, name) {\n    console.log(\"function called\", name);\n    const partTimeJobs = [];\n    const fullTimeJobs = [];\n    const contractJobs = [];\n\n    switch (name) {\n      case 'partTime':\n        partTimeJobs.concat(jobs.filter(job => switchState.partTime === true && job.type === \"Part Time\"));\n      // console.log('switch case: ', name, switchState.name, jobs[0].type);\n\n      case 'fullTime':\n        fullTimeJobs.concat(jobs.filter(job => switchState.fullTime === true && job.type === \"Full Time\"));\n      // console.log('switch case: ', name, switchState.name, jobs[0].type);\n\n      case 'contract':\n        contractJobs.concat(jobs.filter(job => switchState.contract === true && job.type === \"Contract\"));\n      // console.log('switch case: ', name, switchState.name, jobs[0].type);\n\n      default:\n        break;\n    }\n\n    console.log(partTimeJobs, fullTimeJobs, contractJobs);\n    return partTimeJobs, fullTimeJobs, contractJobs;\n  } // console.log(jobs);\n  //pagination\n\n\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs / 50);\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        activeStep = _React$useState4[0],\n        setActiveStep = _React$useState4[1];\n\n  const jobsOnPage = jobs.slice(activeStep * 50, activeStep * 50 + 50);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    window.scrollTo(0, 0);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    window.scrollTo(0, 0);\n  } //Modal\n\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  const _React$useState7 = React.useState({}),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        selectedJob = _React$useState8[0],\n        selectJob = _React$useState8[1];\n\n  function handleClickOpen() {\n    setOpen(true); // console.log(open);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  } //TODO add search for terma that go to algo. seperated by commas?\n\n\n  return React.createElement(\"div\", {\n    className: \"jobs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(JobModal, {\n    open: open,\n    handleClose: handleClose,\n    job: selectedJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Entry level software jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Found \", numJobs, \" Jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Showing \", activeStep * 50, \" - \", activeStep * 50 + 50), React.createElement(Switch, {\n    handleChange: handleChange,\n    switchState: switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), jobsOnPage.map((job, i) => React.createElement(Job, {\n    key: i,\n    job: job,\n    onClick: () => {\n      handleClickOpen();\n      selectJob(job);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Page \", activeStep + 1, \" of \", numPages), React.createElement(Stepper, {\n    numPages: numPages,\n    activeStep: activeStep,\n    handleNext: () => handleNext(),\n    handleBack: () => handleBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n} //props to stepper - steps={numPages}, activeStep={activeStep}, onClick={handleNext}, onClick={handleBack}","map":{"version":3,"sources":["/Users/leseanjohnson/Documents/jobs-board/client/src/components/Jobs.js"],"names":["React","Job","Typography","JobModal","Stepper","Switch","Jobs","jobs","useState","partTime","fullTime","contract","switchState","setSwitchState","switchArr","handleChange","name","event","filterJobsbyType","target","checked","console","log","partTimeJobs","fullTimeJobs","contractJobs","concat","filter","job","type","numJobs","length","numPages","Math","ceil","activeStep","setActiveStep","jobsOnPage","slice","handleNext","prevActiveStep","window","scrollTo","handleBack","open","setOpen","selectedJob","selectJob","handleClickOpen","handleClose","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Job from './Job'\nimport { Typography } from '@material-ui/core';\nimport JobModal from '../components/JobModal';\nimport Stepper from '../components/Stepper';\nimport Switch from '../components/Switch';\n\n\nexport default function Jobs({jobs}) {\n\n  //switches\n  const [switchState, setSwitchState] = React.useState({\n    partTime: false,\n    fullTime: false,\n    contract: true,\n  });\n\n  const switchArr = [\"partTime\", \"fullTime\", \"contract\"];\n\n  const handleChange = name => event => {\n    filterJobsbyType(jobs, name);\n    // console.log(name)\n    // console.log(name, event.target.checked)\n    setSwitchState({ ...switchState, [name]: event.target.checked });\n  };\n\n  function filterJobsbyType (jobs, name) {\n    console.log(\"function called\", name);\n    const partTimeJobs = [];\n    const fullTimeJobs = [];\n    const contractJobs = [];\n\n    switch (name) {\n      \n      case 'partTime' :\n        partTimeJobs.concat(jobs.filter(job => switchState.partTime === true && job.type === \"Part Time\"));\n        // console.log('switch case: ', name, switchState.name, jobs[0].type);\n\n      case 'fullTime' :\n        fullTimeJobs.concat(jobs.filter(job => switchState.fullTime === true && job.type === \"Full Time\"));\n        // console.log('switch case: ', name, switchState.name, jobs[0].type);\n\n      case 'contract' :\n        contractJobs.concat(jobs.filter(job => switchState.contract === true && job.type === \"Contract\"));\n        // console.log('switch case: ', name, switchState.name, jobs[0].type);\n\n      default:\n        break;\n    }\n\n      console.log(partTimeJobs, fullTimeJobs, contractJobs)\n    return partTimeJobs, fullTimeJobs, contractJobs;\n  }\n\n  // console.log(jobs);\n  \n  //pagination\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs/50);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const jobsOnPage = jobs.slice( activeStep * 50, (activeStep * 50) + 50 );\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    window.scrollTo(0, 0)\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    window.scrollTo(0, 0)\n  }\n\n  //Modal\n  const [open, setOpen] = React.useState(false);\n  const [selectedJob, selectJob] = React.useState({});\n\n  function handleClickOpen() {\n    setOpen(true);\n    // console.log(open);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n\n//TODO add search for terma that go to algo. seperated by commas?\n  return (\n    <div className='jobs'>\n      <JobModal \n        open={open} \n        handleClose={handleClose} \n        job={selectedJob} \n      />\n      <Typography variant=\"h4\" component=\"h1\">\n        Entry level software jobs\n      </Typography>\n      <Typography variant=\"h6\">\n        Found {numJobs} Jobs\n        {/* that fit {searchCriteria} */}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h1\">\n        Showing {activeStep * 50} - {(activeStep * 50) + 50}\n      </Typography>\n      <Switch \n        handleChange={handleChange} \n        switchState={switchState} \n      />\n      {\n        jobsOnPage.map(\n          ( job,i ) => <Job key={i} job={job} onClick={() => {\n                          handleClickOpen()\n                          selectJob(job)\n                          }}\n                        />\n        )\n      }\n      <div>\n        Page { activeStep + 1 } of { numPages }\n      </div>\n      <Stepper \n        numPages={numPages} \n        activeStep={activeStep} \n        handleNext={() => handleNext()} \n        handleBack={() => handleBack()}\n      />\n    </div>\n  );\n}\n\n//props to stepper - steps={numPages}, activeStep={activeStep}, onClick={handleNext}, onClick={handleBack}"]},"metadata":{},"sourceType":"module"}