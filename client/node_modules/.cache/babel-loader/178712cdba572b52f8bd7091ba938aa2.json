{"ast":null,"code":"import _objectSpread from \"/Users/leseanjohnson/Documents/jobs-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/leseanjohnson/Documents/jobs-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/leseanjohnson/Documents/jobs-board/client/src/components/Jobs.js\";\nimport React from 'react';\nimport Job from './Job';\nimport { Typography } from '@material-ui/core';\nimport JobModal from '../components/JobModal';\nimport Stepper from '../components/Stepper';\nimport Switch from '../components/Switch';\nexport default function Jobs({\n  jobs\n}) {\n  // React.useEffect(() => {\n  //   filterJobsbyType(jobs);\n  //   // console.log(`You clicked 5 times`);\n  // },[jobs]);\n  //switches\n  const _React$useState = React.useState({\n    partTime: true,\n    fullTime: false,\n    contract: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        switchState = _React$useState2[0],\n        setSwitchState = _React$useState2[1];\n\n  console.log(switchState);\n\n  const _React$useState3 = React.useState(jobs),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        jobsData = _React$useState4[0],\n        setJobsData = _React$useState4[1];\n\n  const typeNamesArr = [\"Part Time\", \"Full Time\", \"Contract\"];\n\n  const handleChange = name => event => {\n    setSwitchState(_objectSpread({}, switchState, {\n      [name]: event.target.checked\n    }));\n    filterJobsbyType(jobs, name);\n  };\n\n  function filterJobsbyType(jobs, name) {\n    // console.log(\"function called\", name);\n    let partTimeJobs = [];\n    let fullTimeJobs = [];\n    let contractJobs = [];\n    let filteredJobs = [];\n\n    if (name === 'partTime') {\n      // partTimeJobs = jobs.filter(job => switchState.partTime === true && job.type === typeNamesArr[0]);\n      setJobsData(jobs.filter(job => switchState.partTime === true && job.type === typeNamesArr[0])); // console.log('switch case: ', name, switchState.name, jobs[0].type);\n    }\n\n    if (name === 'fullTime') {\n      // fullTimeJobs = jobs.filter(job => switchState.fullTime === true && job.type === typeNamesArr[1]);\n      setJobsData(jobs.filter(job => switchState.fullTime === true && job.type === typeNamesArr[1])); // console.log('switch case: ', name, switchState.name, jobs[0].type);\n    }\n\n    if (name === 'contract') {\n      // contractJobs = jobs.filter(job => switchState.contract === true && job.type === typeNamesArr[2]);\n      setJobsData(jobs.filter(job => switchState.contract === true && job.type === typeNamesArr[2])); // console.log('switch case: ', name, switchState.name, jobs[0].type);\n    }\n\n    return filteredJobs.length === 0 ? null : setJobsData([...partTimeJobs, ...fullTimeJobs, ...contractJobs]);\n  } //pagination\n\n\n  console.log(\"jobsData: \", jobsData);\n  const numJobs = jobsData.length;\n  const numPages = Math.ceil(numJobs / 50);\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeStep = _React$useState6[0],\n        setActiveStep = _React$useState6[1];\n\n  const jobsOnPage = jobsData.slice(activeStep * 50, activeStep * 50 + 50);\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    window.scrollTo(0, 0);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    window.scrollTo(0, 0);\n  } //Modal\n\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        open = _React$useState8[0],\n        setOpen = _React$useState8[1];\n\n  const _React$useState9 = React.useState({}),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        selectedJob = _React$useState10[0],\n        selectJob = _React$useState10[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  } //TODO add search for terms that go to algo. seperated by commas?\n\n\n  return React.createElement(\"div\", {\n    className: \"jobs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(JobModal, {\n    open: open,\n    handleClose: handleClose,\n    job: selectedJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Entry level software jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Found \", numJobs, \" Jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Showing \", activeStep * 50, \" - \", activeStep * 50 + 50), React.createElement(Switch, {\n    handleChange: handleChange,\n    switchState: switchState,\n    labelsArr: typeNamesArr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Stepper, {\n    numPages: numPages,\n    activeStep: activeStep,\n    handleNext: () => handleNext(),\n    handleBack: () => handleBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), jobsOnPage.map((job, i) => React.createElement(Job, {\n    key: i,\n    job: job,\n    onClick: () => {\n      handleClickOpen();\n      selectJob(job);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Page \", activeStep + 1, \" of \", numPages), React.createElement(Stepper, {\n    numPages: numPages,\n    activeStep: activeStep,\n    handleNext: () => handleNext(),\n    handleBack: () => handleBack(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/leseanjohnson/Documents/jobs-board/client/src/components/Jobs.js"],"names":["React","Job","Typography","JobModal","Stepper","Switch","Jobs","jobs","useState","partTime","fullTime","contract","switchState","setSwitchState","console","log","jobsData","setJobsData","typeNamesArr","handleChange","name","event","target","checked","filterJobsbyType","partTimeJobs","fullTimeJobs","contractJobs","filteredJobs","filter","job","type","length","numJobs","numPages","Math","ceil","activeStep","setActiveStep","jobsOnPage","slice","handleNext","prevActiveStep","window","scrollTo","handleBack","open","setOpen","selectedJob","selectJob","handleClickOpen","handleClose","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Job from './Job'\nimport { Typography } from '@material-ui/core';\nimport JobModal from '../components/JobModal';\nimport Stepper from '../components/Stepper';\nimport Switch from '../components/Switch';\n\nexport default function Jobs({jobs}) {\n  \n  // React.useEffect(() => {\n  //   filterJobsbyType(jobs);\n  //   // console.log(`You clicked 5 times`);\n  // },[jobs]);\n\n  //switches\n  const [switchState, setSwitchState] = React.useState({\n    partTime: true,\n    fullTime: false,\n    contract: false,\n  });\n\n  console.log(switchState);\n\n  const [jobsData, setJobsData] = React.useState(jobs);\n\n  const typeNamesArr = [\"Part Time\", \"Full Time\", \"Contract\"];\n\n  const handleChange = name => event => {\n    setSwitchState({ ...switchState, [name]: event.target.checked });\n    filterJobsbyType(jobs, name);\n  };\n\n  function filterJobsbyType (jobs, name) {\n    // console.log(\"function called\", name);\n    let partTimeJobs = [];\n    let fullTimeJobs = [];\n    let contractJobs = [];\n    let filteredJobs = [];\n\n    if(name === 'partTime') {\n      // partTimeJobs = jobs.filter(job => switchState.partTime === true && job.type === typeNamesArr[0]);\n      setJobsData(jobs.filter(job => switchState.partTime === true && job.type === typeNamesArr[0]));\n      // console.log('switch case: ', name, switchState.name, jobs[0].type);\n    }\n    if(name === 'fullTime'){\n      // fullTimeJobs = jobs.filter(job => switchState.fullTime === true && job.type === typeNamesArr[1]);\n      setJobsData(jobs.filter(job => switchState.fullTime === true && job.type === typeNamesArr[1]));\n      // console.log('switch case: ', name, switchState.name, jobs[0].type);\n    }        \n\n    if(name === 'contract') {\n      // contractJobs = jobs.filter(job => switchState.contract === true && job.type === typeNamesArr[2]);\n      setJobsData(jobs.filter(job => switchState.contract === true && job.type === typeNamesArr[2]));\n      // console.log('switch case: ', name, switchState.name, jobs[0].type);\n    }\n    \n    return filteredJobs.length === 0 ? null : setJobsData([...partTimeJobs, ...fullTimeJobs, ...contractJobs]);\n  }\n\n  //pagination\n  console.log(\"jobsData: \", jobsData)\n  const numJobs = jobsData.length;\n  const numPages = Math.ceil(numJobs/50);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const jobsOnPage = jobsData.slice( activeStep * 50, (activeStep * 50) + 50 );\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    window.scrollTo(0, 0)\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    window.scrollTo(0, 0)\n  }\n\n  //Modal\n  const [open, setOpen] = React.useState(false);\n  const [selectedJob, selectJob] = React.useState({});\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n\n//TODO add search for terms that go to algo. seperated by commas?\n  return (\n    <div className='jobs'>\n      <JobModal \n        open={open} \n        handleClose={handleClose} \n        job={selectedJob} \n      />\n      <Typography variant=\"h4\" component=\"h1\">\n        Entry level software jobs\n      </Typography>\n      <Typography variant=\"h6\">\n        Found {numJobs} Jobs\n        {/* that fit {searchCriteria} */}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h1\">\n        Showing {activeStep * 50} - {(activeStep * 50) + 50}\n      </Typography>\n      <Switch \n        handleChange={handleChange} \n        switchState={switchState}\n        labelsArr={typeNamesArr}\n      />\n            <Stepper \n        numPages={numPages} \n        activeStep={activeStep} \n        handleNext={() => handleNext()} \n        handleBack={() => handleBack()}\n      />\n      {\n        jobsOnPage.map(\n          ( job,i ) => <Job key={i} job={job} onClick={() => {\n                          handleClickOpen()\n                          selectJob(job)\n                          }}\n                        />\n        )\n      }\n      <div>\n        Page { activeStep + 1 } of { numPages }\n      </div>\n      <Stepper \n        numPages={numPages} \n        activeStep={activeStep} \n        handleNext={() => handleNext()} \n        handleBack={() => handleBack()}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}